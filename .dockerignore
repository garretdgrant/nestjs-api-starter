# Inverted .dockerignore
# Benefits of this inverted approach:
# 1. **Smaller Images**: By default, everything is excluded. This avoids
#    accidentally adding unnecessary files (e.g., logs, temp files, local
#    configurations).
# 2. **Faster Builds**: Docker has fewer files to process and copy, speeding up
#    the build process.
# 3. **Security**: Sensitive files like `.env` or `.git` are excluded by
#    default, reducing the risk of exposing secrets.
# 4. **Explicit Control**: You explicitly list only the files and folders
#    required, making the build process more predictable.

# Ignore everything
**

# Include the compiled application (output of the build process)
!dist/

# Include the dependencies for runtime
!node_modules/

# Include package management files for installing dependencies
!package.json
!pnpm-lock.yaml

# Include the TypeScript configuration file if needed during runtime
!tsconfig.json

